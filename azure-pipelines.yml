trigger:
  - main

variables:
  deployPath: "/home/ubuntu"
  sshEndpoint: "training_anil"
  dockerHubBackend: "athakurcovdev/backend"
  dockerHubFrontend: "athakurcovdev/frontend"
  dockerTag: "latest"
  backendContainerName: "backend-container"
  frontendContainerName: "frontend-container"
  backendPort: "5000"
  frontendPort: "3000"

stages:
  - stage: BuildAndPushImages
    displayName: Build & Push Docker Images
    jobs:
      - job: BuildPush
        displayName: Build & Push Docker Images
        pool:
          vmImage: ubuntu-latest
        steps:
          # Docker login
          - task: Docker@2
            displayName: "Login to Docker Hub"
            inputs:
              command: login
              containerRegistry: "DockerHubConnection" # Must exist in your project

          # Build & push backend image
          - task: Docker@2
            displayName: "Build & Push Backend Image"
            inputs:
              containerRegistry: "DockerHubConnection"
              repository: $(dockerHubBackend)
              command: buildAndPush
              Dockerfile: backend/Dockerfile
              tags: $(dockerTag)

          # Build & push frontend image
          - task: Docker@2
            displayName: "Build & Push Frontend Image"
            inputs:
              containerRegistry: "DockerHubConnection"
              repository: $(dockerHubFrontend)
              command: buildAndPush
              Dockerfile: frontend/Dockerfile
              tags: $(dockerTag)

  - stage: DeployToVM
    displayName: Deploy to VM
    dependsOn: BuildAndPushImages
    jobs:
      - job: Deploy
        displayName: Pull Images & Run Containers
        pool:
          vmImage: ubuntu-latest
        steps:
          # Stop and remove existing containers safely
          - task: SSH@0
            displayName: "Stop and remove containers"
            inputs:
              sshEndpoint: $(sshEndpoint)
              runOptions: commands
              commands: |
                docker stop $(backendContainerName) || true
                docker rm $(backendContainerName) || true
                docker stop $(frontendContainerName) || true
                docker rm $(frontendContainerName) || true

          # Pull latest images from Docker Hub
          - task: SSH@0
            displayName: "Pull Docker Hub images"
            inputs:
              sshEndpoint: $(sshEndpoint)
              runOptions: commands
              commands: |
                docker pull $(dockerHubBackend):$(dockerTag)
                docker pull $(dockerHubFrontend):$(dockerTag)

          # Run containers with updated images
          - task: SSH@0
            displayName: "Run containers"
            inputs:
              sshEndpoint: $(sshEndpoint)
              runOptions: commands
              commands: |
                docker run -d --name $(backendContainerName) -p $(backendPort):$(backendPort) $(dockerHubBackend):$(dockerTag)
                docker run -d --name $(frontendContainerName) -p $(frontendPort):$(frontendPort) $(dockerHubFrontend):$(dockerTag)
